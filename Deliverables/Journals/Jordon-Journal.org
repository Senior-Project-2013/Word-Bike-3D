* Jordon Biondo Time Journal
  | Date and   | Start Time | End Time | Total Time (minutes) | Task Description                                                                                                                          |
  |------------+------------+----------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------|
  | 09/04/2013 | 01:05 PM   | 02:40 PM |                   95 | Wrote Ice-breaker,foobar created Journal, started journal helpers. Worked with team getting the web page set up                           |
  |------------+------------+----------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------|
  | 09/05/2013 | 02:07 PM   | 03:00 PM |                   53 | Finished up prospectus with the engineering principles section                                                                            |
  |------------+------------+----------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------|
  | 09/9/2013  | 01:30 PM   | 04:30 PM |                  180 | Went over technical hurdles, discussed the architecture. Prototyped algorithms for tile relationships, worked to hard code relations      |
  |------------+------------+----------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------|
  | 09/10/2013 | 03:45 PM   | 06:30 PM |                  165 | Discussed algorithms for solving tile relations, discussed the feasibility. Engaged in a team bonding exercise, hard coded tile relations |
  |------------+------------+----------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------|
  | 09/11/2013 | 03:00 PM   | 04:00 PM |                   60 | Prototyped the tile relationship algorithm discussed game rules and possible solutions                                                    |
  |------------+------------+----------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------|
  | 09/12/2013 | 02:30 PM   | 04:00 PM |                   90 | Completed the feasibility report on scalable tile relationship algorithms, discussed more tasks, worked on algorithm                      |
  |------------+------------+----------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------|
  | 09/12/2013 | 04:17 PM   |          |                      |                                                                                                                                           |
  |------------+------------+----------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------|
  
** Helpers
    #+BEGIN_SRC emacs-lisp
(defun journal/new-entry()
  "Insert a new row in the journal table and fill in the date and start time fields."
  (interactive)
  (org-table-goto-line 1337)
  (org-table-goto-column 1)
  (org-table-insert-row t)
  (org-table-insert-hline t)
  (insert (format-time-string "%m/%d/%Y"))
  (org-table-align)
  (org-table-next-field)
  (insert (format-time-string "%I:%M %p"))
  (org-table-next-field)
  (org-table-next-field)
  (org-table-next-field))

(defun journal/end-entry()
  "Fill End Time with the current time."
  (interactive)
  (org-table-goto-column 3)
  (delete-region (point) (progn (org-table-end-of-field 1) (point)))
  (org-table-align)
  (insert (format-time-string "%I:%M %p"))
  (org-table-align))

(defun journal/calc-minute() 
  "Fill the Total Time field in the current row with the elapsed minutes."
  (interactive)
  (org-table-goto-column 3)
  (cl-flet 
      ((time-string-parse (str)
			  (list 
			   (+ (string-to-int (substring str 0 2))
			      (if (equal (substring str 6 8) "PM") 12 0))
			   (string-to-int (substring str 3 5))
			   (substring str 6 8))))
    (let* ((start-time (time-string-parse (org-table-get nil 2)))
	   (end-time (time-string-parse (org-table-get nil 3))))
      (org-table-goto-column 4)  
      (delete-region (point) (progn (org-table-end-of-field 1) (point)))
      (insert (format "%s" (+ (* (max (- (first end-time) (first start-time) 1) 0) 60)
			      (if (> (first end-time) (first start-time))
				  (+ (- 60 (second start-time))
				     (second end-time))
				(- (second end-time) (second start-time))))))
      (org-table-align))))
  #+END_SRC
